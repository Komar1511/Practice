//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Practice
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class PavilionsEntities : DbContext
    {
        private static PavilionsEntities _context;
        public PavilionsEntities()
        : base("name=PavilionsEntities")
        {
        }
        public static PavilionsEntities GetContext()
        {
            if (_context == null)
                _context = new PavilionsEntities();
            return _context;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<Pavilions> Pavilions { get; set; }
        public virtual DbSet<Rents> Rents { get; set; }
        public virtual DbSet<Shoppings> Shoppings { get; set; }
        public virtual DbSet<Tanants> Tanants { get; set; }
    
        public virtual int dataAndStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dataAndStatus");
        }
    
        public virtual int rentPavilion(Nullable<int> tanant_ID, Nullable<int> emp_ID, string pav_ID, Nullable<int> shop_ID, Nullable<System.DateTime> rental_Start, Nullable<System.DateTime> rental_End)
        {
            var tanant_IDParameter = tanant_ID.HasValue ?
                new ObjectParameter("Tanant_ID", tanant_ID) :
                new ObjectParameter("Tanant_ID", typeof(int));
    
            var emp_IDParameter = emp_ID.HasValue ?
                new ObjectParameter("Emp_ID", emp_ID) :
                new ObjectParameter("Emp_ID", typeof(int));
    
            var pav_IDParameter = pav_ID != null ?
                new ObjectParameter("Pav_ID", pav_ID) :
                new ObjectParameter("Pav_ID", typeof(string));
    
            var shop_IDParameter = shop_ID.HasValue ?
                new ObjectParameter("Shop_ID", shop_ID) :
                new ObjectParameter("Shop_ID", typeof(int));
    
            var rental_StartParameter = rental_Start.HasValue ?
                new ObjectParameter("Rental_Start", rental_Start) :
                new ObjectParameter("Rental_Start", typeof(System.DateTime));
    
            var rental_EndParameter = rental_End.HasValue ?
                new ObjectParameter("Rental_End", rental_End) :
                new ObjectParameter("Rental_End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rentPavilion", tanant_IDParameter, emp_IDParameter, pav_IDParameter, shop_IDParameter, rental_StartParameter, rental_EndParameter);
        }
    
        public virtual ObjectResult<StatisticsShopping_Result> StatisticsShopping()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StatisticsShopping_Result>("StatisticsShopping");
        }
    
        public virtual int threeYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("threeYear");
        }
    }
}
